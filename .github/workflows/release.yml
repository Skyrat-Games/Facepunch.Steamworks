name: Build and Publish

on:
  # Release whenever we want
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Win64
        run: dotnet build ./Facepunch.Steamworks\Facepunch.Steamworks.Win64.csproj --configuration Release

      - name: Build Win32
        run: dotnet build ./Facepunch.Steamworks\Facepunch.Steamworks.Win32.csproj --configuration Release

      - name: Build Posix
        run: dotnet build ./Facepunch.Steamworks\Facepunch.Steamworks.Posix.csproj --configuration Release

      - name: Pack Win64
        run: dotnet pack ./Facepunch.Steamworks\Facepunch.Steamworks.Win64.csproj --configuration Release --output  ${{ env.NuGetDirectory }}

      - name: Pack Win32
        run: dotnet pack ./Facepunch.Steamworks\Facepunch.Steamworks.Win32.csproj --configuration Release --output  ${{ env.NuGetDirectory }}

      - name: Pack Posix
        run: dotnet pack ./Facepunch.Steamworks\Facepunch.Steamworks.Posix.csproj --configuration Release --output  ${{ env.NuGetDirectory }}

      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  # validate_nuget:
  #   runs-on: ubuntu-latest
  #   needs: [create_nuget]
  #   steps:
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 8.0.x

  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: nuget
  #         path: ${{ env.NuGetDirectory }}

  #     - name: Install nuget validator
  #       run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

  #     # Validate metadata and content of the NuGet package
  #     # https://www.nuget.org/packages/Meziantou.Framework.NuGetPackageValidation.Tool#readme-body-tab
  #     # If some rules are not applicable, you can disable them
  #     # using the --excluded-rules or --excluded-rule-ids option
  #     - name: Validate package
  #       run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NuGetDirectory }}/*.nupkg")

  # run_test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #     - name: Run tests
  #       run: dotnet test --configuration Release

  deploy:
    # Publish only when creating a GitHub Release
    # https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository
    # You can update this logic if you want to manage releases differently
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.GITHUB_TOKEN }}" --source https://nuget.pkg.github.com/Skyrat-Games/index.json --skip-duplicate
          }
